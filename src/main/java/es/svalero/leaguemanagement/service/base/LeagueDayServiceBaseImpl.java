package es.svalero.leaguemanagement.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import es.svalero.leaguemanagement.model.LeagueDay;
import es.svalero.leaguemanagement.service.LeagueDayService;
import es.svalero.leaguemanagement.service.persistence.LeagueDayPersistence;
import es.svalero.leaguemanagement.service.persistence.LeaguePersistence;
import es.svalero.leaguemanagement.service.persistence.MatchPersistence;
import es.svalero.leaguemanagement.service.persistence.TeamPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the league day remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link es.svalero.leaguemanagement.service.impl.LeagueDayServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see es.svalero.leaguemanagement.service.impl.LeagueDayServiceImpl
 * @see es.svalero.leaguemanagement.service.LeagueDayServiceUtil
 * @generated
 */
public abstract class LeagueDayServiceBaseImpl extends BaseServiceImpl
    implements LeagueDayService, IdentifiableBean {
    @BeanReference(type = es.svalero.leaguemanagement.service.LeagueLocalService.class)
    protected es.svalero.leaguemanagement.service.LeagueLocalService leagueLocalService;
    @BeanReference(type = es.svalero.leaguemanagement.service.LeagueService.class)
    protected es.svalero.leaguemanagement.service.LeagueService leagueService;
    @BeanReference(type = LeaguePersistence.class)
    protected LeaguePersistence leaguePersistence;
    @BeanReference(type = es.svalero.leaguemanagement.service.LeagueDayLocalService.class)
    protected es.svalero.leaguemanagement.service.LeagueDayLocalService leagueDayLocalService;
    @BeanReference(type = es.svalero.leaguemanagement.service.LeagueDayService.class)
    protected es.svalero.leaguemanagement.service.LeagueDayService leagueDayService;
    @BeanReference(type = LeagueDayPersistence.class)
    protected LeagueDayPersistence leagueDayPersistence;
    @BeanReference(type = es.svalero.leaguemanagement.service.MatchLocalService.class)
    protected es.svalero.leaguemanagement.service.MatchLocalService matchLocalService;
    @BeanReference(type = es.svalero.leaguemanagement.service.MatchService.class)
    protected es.svalero.leaguemanagement.service.MatchService matchService;
    @BeanReference(type = MatchPersistence.class)
    protected MatchPersistence matchPersistence;
    @BeanReference(type = es.svalero.leaguemanagement.service.TeamLocalService.class)
    protected es.svalero.leaguemanagement.service.TeamLocalService teamLocalService;
    @BeanReference(type = es.svalero.leaguemanagement.service.TeamService.class)
    protected es.svalero.leaguemanagement.service.TeamService teamService;
    @BeanReference(type = TeamPersistence.class)
    protected TeamPersistence teamPersistence;
    @BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
    protected com.liferay.counter.service.CounterLocalService counterLocalService;
    @BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
    protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
    @BeanReference(type = com.liferay.portal.service.UserLocalService.class)
    protected com.liferay.portal.service.UserLocalService userLocalService;
    @BeanReference(type = com.liferay.portal.service.UserService.class)
    protected com.liferay.portal.service.UserService userService;
    @BeanReference(type = UserPersistence.class)
    protected UserPersistence userPersistence;
    private String _beanIdentifier;
    private ClassLoader _classLoader;
    private LeagueDayServiceClpInvoker _clpInvoker = new LeagueDayServiceClpInvoker();

    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. Always use {@link es.svalero.leaguemanagement.service.LeagueDayServiceUtil} to access the league day remote service.
     */

    /**
     * Returns the league local service.
     *
     * @return the league local service
     */
    public es.svalero.leaguemanagement.service.LeagueLocalService getLeagueLocalService() {
        return leagueLocalService;
    }

    /**
     * Sets the league local service.
     *
     * @param leagueLocalService the league local service
     */
    public void setLeagueLocalService(
        es.svalero.leaguemanagement.service.LeagueLocalService leagueLocalService) {
        this.leagueLocalService = leagueLocalService;
    }

    /**
     * Returns the league remote service.
     *
     * @return the league remote service
     */
    public es.svalero.leaguemanagement.service.LeagueService getLeagueService() {
        return leagueService;
    }

    /**
     * Sets the league remote service.
     *
     * @param leagueService the league remote service
     */
    public void setLeagueService(
        es.svalero.leaguemanagement.service.LeagueService leagueService) {
        this.leagueService = leagueService;
    }

    /**
     * Returns the league persistence.
     *
     * @return the league persistence
     */
    public LeaguePersistence getLeaguePersistence() {
        return leaguePersistence;
    }

    /**
     * Sets the league persistence.
     *
     * @param leaguePersistence the league persistence
     */
    public void setLeaguePersistence(LeaguePersistence leaguePersistence) {
        this.leaguePersistence = leaguePersistence;
    }

    /**
     * Returns the league day local service.
     *
     * @return the league day local service
     */
    public es.svalero.leaguemanagement.service.LeagueDayLocalService getLeagueDayLocalService() {
        return leagueDayLocalService;
    }

    /**
     * Sets the league day local service.
     *
     * @param leagueDayLocalService the league day local service
     */
    public void setLeagueDayLocalService(
        es.svalero.leaguemanagement.service.LeagueDayLocalService leagueDayLocalService) {
        this.leagueDayLocalService = leagueDayLocalService;
    }

    /**
     * Returns the league day remote service.
     *
     * @return the league day remote service
     */
    public es.svalero.leaguemanagement.service.LeagueDayService getLeagueDayService() {
        return leagueDayService;
    }

    /**
     * Sets the league day remote service.
     *
     * @param leagueDayService the league day remote service
     */
    public void setLeagueDayService(
        es.svalero.leaguemanagement.service.LeagueDayService leagueDayService) {
        this.leagueDayService = leagueDayService;
    }

    /**
     * Returns the league day persistence.
     *
     * @return the league day persistence
     */
    public LeagueDayPersistence getLeagueDayPersistence() {
        return leagueDayPersistence;
    }

    /**
     * Sets the league day persistence.
     *
     * @param leagueDayPersistence the league day persistence
     */
    public void setLeagueDayPersistence(
        LeagueDayPersistence leagueDayPersistence) {
        this.leagueDayPersistence = leagueDayPersistence;
    }

    /**
     * Returns the match local service.
     *
     * @return the match local service
     */
    public es.svalero.leaguemanagement.service.MatchLocalService getMatchLocalService() {
        return matchLocalService;
    }

    /**
     * Sets the match local service.
     *
     * @param matchLocalService the match local service
     */
    public void setMatchLocalService(
        es.svalero.leaguemanagement.service.MatchLocalService matchLocalService) {
        this.matchLocalService = matchLocalService;
    }

    /**
     * Returns the match remote service.
     *
     * @return the match remote service
     */
    public es.svalero.leaguemanagement.service.MatchService getMatchService() {
        return matchService;
    }

    /**
     * Sets the match remote service.
     *
     * @param matchService the match remote service
     */
    public void setMatchService(
        es.svalero.leaguemanagement.service.MatchService matchService) {
        this.matchService = matchService;
    }

    /**
     * Returns the match persistence.
     *
     * @return the match persistence
     */
    public MatchPersistence getMatchPersistence() {
        return matchPersistence;
    }

    /**
     * Sets the match persistence.
     *
     * @param matchPersistence the match persistence
     */
    public void setMatchPersistence(MatchPersistence matchPersistence) {
        this.matchPersistence = matchPersistence;
    }

    /**
     * Returns the team local service.
     *
     * @return the team local service
     */
    public es.svalero.leaguemanagement.service.TeamLocalService getTeamLocalService() {
        return teamLocalService;
    }

    /**
     * Sets the team local service.
     *
     * @param teamLocalService the team local service
     */
    public void setTeamLocalService(
        es.svalero.leaguemanagement.service.TeamLocalService teamLocalService) {
        this.teamLocalService = teamLocalService;
    }

    /**
     * Returns the team remote service.
     *
     * @return the team remote service
     */
    public es.svalero.leaguemanagement.service.TeamService getTeamService() {
        return teamService;
    }

    /**
     * Sets the team remote service.
     *
     * @param teamService the team remote service
     */
    public void setTeamService(
        es.svalero.leaguemanagement.service.TeamService teamService) {
        this.teamService = teamService;
    }

    /**
     * Returns the team persistence.
     *
     * @return the team persistence
     */
    public TeamPersistence getTeamPersistence() {
        return teamPersistence;
    }

    /**
     * Sets the team persistence.
     *
     * @param teamPersistence the team persistence
     */
    public void setTeamPersistence(TeamPersistence teamPersistence) {
        this.teamPersistence = teamPersistence;
    }

    /**
     * Returns the counter local service.
     *
     * @return the counter local service
     */
    public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
        return counterLocalService;
    }

    /**
     * Sets the counter local service.
     *
     * @param counterLocalService the counter local service
     */
    public void setCounterLocalService(
        com.liferay.counter.service.CounterLocalService counterLocalService) {
        this.counterLocalService = counterLocalService;
    }

    /**
     * Returns the resource local service.
     *
     * @return the resource local service
     */
    public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
        return resourceLocalService;
    }

    /**
     * Sets the resource local service.
     *
     * @param resourceLocalService the resource local service
     */
    public void setResourceLocalService(
        com.liferay.portal.service.ResourceLocalService resourceLocalService) {
        this.resourceLocalService = resourceLocalService;
    }

    /**
     * Returns the user local service.
     *
     * @return the user local service
     */
    public com.liferay.portal.service.UserLocalService getUserLocalService() {
        return userLocalService;
    }

    /**
     * Sets the user local service.
     *
     * @param userLocalService the user local service
     */
    public void setUserLocalService(
        com.liferay.portal.service.UserLocalService userLocalService) {
        this.userLocalService = userLocalService;
    }

    /**
     * Returns the user remote service.
     *
     * @return the user remote service
     */
    public com.liferay.portal.service.UserService getUserService() {
        return userService;
    }

    /**
     * Sets the user remote service.
     *
     * @param userService the user remote service
     */
    public void setUserService(
        com.liferay.portal.service.UserService userService) {
        this.userService = userService;
    }

    /**
     * Returns the user persistence.
     *
     * @return the user persistence
     */
    public UserPersistence getUserPersistence() {
        return userPersistence;
    }

    /**
     * Sets the user persistence.
     *
     * @param userPersistence the user persistence
     */
    public void setUserPersistence(UserPersistence userPersistence) {
        this.userPersistence = userPersistence;
    }

    public void afterPropertiesSet() {
        Class<?> clazz = getClass();

        _classLoader = clazz.getClassLoader();
    }

    public void destroy() {
    }

    /**
     * Returns the Spring bean ID for this bean.
     *
     * @return the Spring bean ID for this bean
     */
    @Override
    public String getBeanIdentifier() {
        return _beanIdentifier;
    }

    /**
     * Sets the Spring bean ID for this bean.
     *
     * @param beanIdentifier the Spring bean ID for this bean
     */
    @Override
    public void setBeanIdentifier(String beanIdentifier) {
        _beanIdentifier = beanIdentifier;
    }

    @Override
    public Object invokeMethod(String name, String[] parameterTypes,
        Object[] arguments) throws Throwable {
        Thread currentThread = Thread.currentThread();

        ClassLoader contextClassLoader = currentThread.getContextClassLoader();

        if (contextClassLoader != _classLoader) {
            currentThread.setContextClassLoader(_classLoader);
        }

        try {
            return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
        } finally {
            if (contextClassLoader != _classLoader) {
                currentThread.setContextClassLoader(contextClassLoader);
            }
        }
    }

    protected Class<?> getModelClass() {
        return LeagueDay.class;
    }

    protected String getModelClassName() {
        return LeagueDay.class.getName();
    }

    /**
     * Performs an SQL query.
     *
     * @param sql the sql query
     */
    protected void runSQL(String sql) throws SystemException {
        try {
            DataSource dataSource = leagueDayPersistence.getDataSource();

            SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
                    sql, new int[0]);

            sqlUpdate.update();
        } catch (Exception e) {
            throw new SystemException(e);
        }
    }
}
